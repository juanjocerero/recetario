// Ruta: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/prisma"
}

datasource db {
  // Justificación: Se configura para SQLite para el desarrollo local,
  // como se especifica en el plan (M1.3, M2.2).
  provider = "sqlite"
  url      = "file:./dev.db"
}

model ProductCache {
  id          String    @id // Código de barras
  productName String
  brand       String?
  imageUrl    String?
  calories    Float?    // Valor por 100g
  fat         Float?    // Valor por 100g
  protein     Float?    // Valor por 100g
  carbs       Float?    // Valor por 100g
  // Guardamos el payload completo por si se necesita en el futuro,
  // pero no lo usamos para las consultas principales.
  fullPayload Json?
  updatedAt   DateTime  @updatedAt
}

model CustomIngredient {
  id        String   @id @default(cuid())
  name      String   @unique
  // Columnas normalizadas para consistencia
  calories  Float
  fat       Float
  protein   Float
  carbs     Float
}

model Recipe {
  id          String             @id @default(cuid())
  title       String
  description String?
  steps       String
  ingredients RecipeIngredient[]
}

model RecipeIngredient {
  id                 String            @id @default(cuid())
  recipe             Recipe            @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId           String
  // Se relaciona directamente con un ProductCache o un CustomIngredient
  productCache       ProductCache?     @relation(fields: [productCacheId], references: [id])
  productCacheId     String?
  customIngredient   CustomIngredient? @relation(fields: [customIngredientId], references: [id])
  customIngredientId String?
  quantity           Float             // En gramos
}